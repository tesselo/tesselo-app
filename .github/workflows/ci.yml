name: Tesselo app CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      sure:
        description: 'Are you sure to deploy this thing to production?'
        required: true
        default: 'Not really'

jobs:
  js_dependencies:
    name: Javascript dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout tesselo-app
        uses: actions/checkout@v2

      - name: Setup node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14.x

      - name: Attempt to use cache
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json')}}

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

  build:
    name: Build tesselo-app
    needs: [js_dependencies]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout tesselo-app
        uses: actions/checkout@v2

      - name: Setup node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14.x

      - name: Use modules cache
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json')}}

      - name: Use build cache
        uses: actions/cache@v2
        id: build-cache
        with:
          path: ./dist
          key: ${{ runner.os }}-npm-${{ github.sha }}

      - name: Build App
        run: npm run build:production

  test:
      name: App tests
      needs: [js_dependencies, build]
      runs-on: ubuntu-latest

      steps:
      - name: Checkout tesselo-app
        uses: actions/checkout@v2

      - name: Setup node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14.x

      - name: Use modules cache
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json')}}

      - name: Use build cache
        uses: actions/cache@v2
        id: build-cache
        with:
          path: ./dist
          key: ${{ runner.os }}-npm-${{ github.sha }}

      - name: Unit tests
        run: npm run unit

  deploy_to_staging:
      name: Deploy to staging
      needs: [js_dependencies, build, test]
      runs-on: ubuntu-latest
      if: contains('refs/heads/master', github.ref) && !contains('workflow_dispatch', github.event_name)

      steps:
      - name: Checkout tesselo-app
        uses: actions/checkout@v2

      - name: Setup node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14.x

      - name: Use modules cache
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json')}}

      - name: Use build cache
        uses: actions/cache@v2
        id: build-cache
        with:
          path: ./dist
          key: ${{ runner.os }}-npm-${{ github.sha }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Push new build to S3
        run:
          aws s3 sync --exclude *.js.map --acl public-read dist/ s3://${{ env.BUCKET }}
        env:
          BUCKET: stagingapp.tesselo.com

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: E1X9H8PC4Q5SNJ
          PATHS: '/*'

  deploy_to_production:
      name: Deploy to production
      needs: [js_dependencies, build, test]
      runs-on: ubuntu-latest
      if: contains('yes', github.event.inputs.sure) && contains('workflow_dispatch', github.event_name)

      steps:
      - name: Checkout tesselo-app
        uses: actions/checkout@v2

      - name: Setup node.js environment
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 14.x

      - name: Use modules cache
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json')}}

      - name: Use build cache
        uses: actions/cache@v2
        id: build-cache
        with:
          path: ./dist
          key: ${{ runner.os }}-npm-${{ github.sha }}
      
      - name: Sentry Release - App
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: 'production'
          sourcemaps: './dist/static/js'
          version: ${{ github.sha }}
          url_prefix: '~/static/js'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Push new build to S3
        run:
          aws s3 sync --exclude *.js.map --acl public-read dist/ s3://${{ env.BUCKET }}
        env:
          BUCKET: app.tesselo.com

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: E1ODJXDXU3290O
          PATHS: '/*'
